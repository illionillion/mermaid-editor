name: CI

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

jobs:
  # Stage 1: Code Quality Checks (all parallel)
  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run ESLint
        uses: ./.github/actions/eslint

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Prettier check
        uses: ./.github/actions/prettier

  typescript:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run TypeScript check
        uses: ./.github/actions/typescript

  # Stage 2: Testing and Building (parallel, depends on quality checks)
  unit_test:
    name: Unit Test
    runs-on: ubuntu-latest
    needs: [eslint, prettier, typescript]
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run unit tests
        uses: ./.github/actions/unit-test

      - name: Coverage Report as Comment
        uses: davelosert/vitest-coverage-report-action@v2
        if: github.event_name == 'pull_request'
        with:
          json-summary-path: "./coverage/coverage-summary.json"
          json-final-path: "./coverage/coverage-final.json"

  e2e_test:
    name: E2E Test
    runs-on: ubuntu-latest
    needs: [eslint, prettier, typescript]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run E2E tests
        uses: ./.github/actions/e2e-test

  vrt_test:
    name: VRT Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run VRT tests
        uses: ./.github/actions/vrt-test

  build_next:
    name: Build Next.js
    runs-on: ubuntu-latest
    needs: [eslint, prettier, typescript]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Next.js
        uses: ./.github/actions/build-next

  build_storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    needs: [eslint, prettier, typescript]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Storybook
        uses: ./.github/actions/build-storybook
