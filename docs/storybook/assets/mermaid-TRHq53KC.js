const l=new Set(["end","start","subgraph","class","classDef","click","style","linkStyle","direction","flowchart","graph","if","else","elseif","while","for","function","return","break","continue"]),u=t=>{if(!t||t.trim()==="")return"node_unnamed";let e=t.trim();return l.has(e.toLowerCase())&&(e=`node_${e}`),/^[0-9]/.test(e)&&(e=`_${e}`),e=e.replace(/\s+/g,"_"),e=e.replace(/[^\w\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF]/g,"_"),e},f=(t,e)=>{switch(t){case"rectangle":return`[${e}]`;case"diamond":return`{${e}}`;case"rounded":return`(${e})`;case"circle":return`((${e}))`;case"hexagon":return`{{${e}}}`;case"stadium":return`([${e}])`;default:return`[${e}]`}},F=t=>!t||t.trim()===""?t:/^\d+$/.test(t.trim())?t.trim():/^[a-zA-Z0-9\-_\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF\s]+$/.test(t)?t:`"${t.replace(/"/g,'\\"')}"`,m=(t="arrow",e)=>{const a=e&&e.trim()!=="",s=a?F(e):"";switch(t){case"arrow":return a?` -->|${s}| `:" --> ";case"thick":return a?` ==>|${s}| `:" ==> ";case"dotted":return a?` -. ${s} .-> `:" -.-> ";case"invisible":return a?` ~~~|${s}| `:" ~~~ ";case"bidirectional":return a?` <-->|${s}| `:" <--> ";case"bidirectional-thick":return a?` <==${s}==> `:" <==> ";default:return a?` -->|${s}| `:" --> "}},A=t=>{switch(t){case"arrow":return"通常の矢印 (->)";case"thick":return"太い矢印 (==>)";case"dotted":return"点線矢印 (-.->)";case"invisible":return"非表示 (~~~)";case"bidirectional":return"双方向矢印 (<->)";case"bidirectional-thick":return"太い双方向矢印 (<==>)";default:return"通常の矢印 (->)"}},E=(t,e="TD")=>{let a=`flowchart ${e}
`;return t.nodes.forEach(s=>{const i=s.data.variableName||`node${s.id}`,r=u(i),n=s.data.shapeType||"rectangle",o=s.data.label||"",c=f(n,o);a+=`    ${r}${c}
`}),t.edges.forEach(s=>{var n,o;const i=t.nodes.find(c=>c.id===s.source),r=t.nodes.find(c=>c.id===s.target);if(i&&r){const c=u(i.data.variableName||`node${i.id}`),d=u(r.data.variableName||`node${r.id}`),p=(n=s.data)==null?void 0:n.label,g=((o=s.data)==null?void 0:o.arrowType)||"arrow",h=m(g,p);a+=`    ${c}${h}${d}
`}}),a},y=t=>{const e={nodes:[],edges:[]};if(!t||t.trim()==="")return e;const s=t.split(`
`).map(r=>r.trim()).filter(r=>r).filter(r=>!r.startsWith("flowchart")&&!r.startsWith("graph")),i=new Map;for(const r of s){const n=w(r);n&&i.set(n.id,n)}for(const r of s){const n=x(r);if(n){if(!i.has(n.source)){const o=$(r,n.source);i.set(n.source,o)}if(!i.has(n.target)){const o=$(r,n.target);i.set(n.target,o)}e.edges.push(n)}}return e.nodes=Array.from(i.values()),e},$=(t,e)=>{const a=[{pattern:"\\[([^\\]]*)\\]",shape:"rectangle"},{pattern:"\\(\\(([^\\)]*)\\)\\)",shape:"circle"},{pattern:"\\{\\{([^\\}]*)\\}\\}",shape:"hexagon"},{pattern:"\\(\\[([^\\]]*)\\]\\)",shape:"stadium"},{pattern:"\\(([^\\)]*)\\)",shape:"rounded"},{pattern:"\\{([^\\}]*)\\}",shape:"diamond"}];for(const{pattern:s,shape:i}of a){const r=new RegExp(`${e}${s}`),n=t.match(r);if(n)return{id:e,variableName:e,label:n[1]||e,shapeType:i}}return{id:e,variableName:e,label:e,shapeType:"rectangle"}},w=t=>{if(t.includes("-->")||t.includes("==>")||t.includes("-.->")||t.includes("~~~")||t.includes("<-->")||t.includes("<==>"))return null;const e=[{regex:/^([a-zA-Z0-9_\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF]+)\[([^\]]*)\]$/,shape:"rectangle"},{regex:/^([a-zA-Z0-9_\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF]+)\(\(([^)]*)\)\)$/,shape:"circle"},{regex:/^([a-zA-Z0-9_\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF]+)\{\{([^}]*)\}\}$/,shape:"hexagon"},{regex:/^([a-zA-Z0-9_\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF]+)\(\[([^\]]*)\]\)$/,shape:"stadium"},{regex:/^([a-zA-Z0-9_\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF]+)\(([^)]*)\)$/,shape:"rounded"},{regex:/^([a-zA-Z0-9_\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF]+)\{([^}]*)\}$/,shape:"diamond"},{regex:/^([a-zA-Z0-9_\u3040-\u309F\u30A0-\u30FF\u4E00-\u9FAF]+)$/,shape:"rectangle"}];for(const a of e){const s=t.match(a.regex);if(s){const i=s[1],r=s[2]!==void 0?s[2]:i;if(i.includes(" "))continue;return{id:i,variableName:i,label:r,shapeType:a.shape}}}return null},x=t=>{const e="[a-zA-Z0-9_\\u3040-\\u309F\\u30A0-\\u30FF\\u4E00-\\u9FAF]+",a="(?:\\[[^\\]]*\\]|\\([^)]*\\)|\\{[^}]*\\}|\\(\\([^)]*\\)\\)|\\{\\{[^}]*\\}\\}|\\(\\[[^\\]]*\\]\\))?",s=[{regex:new RegExp(`^(${e})${a}\\s*<==(.+)==>\\s*(${e})${a}$`),arrowType:"bidirectional-thick",labelPosition:"middle"},{regex:new RegExp(`^(${e})${a}\\s*<==>\\s*(${e})${a}$`),arrowType:"bidirectional-thick"},{regex:new RegExp(`^(${e})${a}\\s*<-->\\s*\\|\\s*([^|]*)\\s*\\|\\s*(${e})${a}$`),arrowType:"bidirectional"},{regex:new RegExp(`^(${e})${a}\\s*<-->\\s*(${e})${a}$`),arrowType:"bidirectional"},{regex:new RegExp(`^(${e})${a}\\s*-\\.\\s*(.+?)\\s*\\.-\\s*>\\s*(${e})${a}$`),arrowType:"dotted",labelPosition:"sides"},{regex:new RegExp(`^(${e})${a}\\s*-\\.\\s*->\\s*(${e})${a}$`),arrowType:"dotted"},{regex:new RegExp(`^(${e})${a}\\s*==>\\s*\\|\\s*([^|]*)\\s*\\|\\s*(${e})${a}$`),arrowType:"thick"},{regex:new RegExp(`^(${e})${a}\\s*==>\\s*(${e})${a}$`),arrowType:"thick"},{regex:new RegExp(`^(${e})${a}\\s*-->\\s*\\|\\s*([^|]*)\\s*\\|\\s*(${e})${a}$`),arrowType:"arrow"},{regex:new RegExp(`^(${e})${a}\\s*-->\\s*(${e})${a}$`),arrowType:"arrow"}];for(const i of s){const r=t.match(i.regex);if(r){let n,o,c="";return i.arrowType==="bidirectional-thick"&&r.length>=4&&r[2]&&r[2].trim()!==""||i.labelPosition==="sides"&&r.length>=4||r.length===4?(n=r[1],c=r[2].trim(),o=r[3]):(n=r[1],o=r[2]),{id:`${n}-${o}`,source:n,target:o,label:c,arrowType:i.arrowType}}}return null};export{E as a,f,A as g,y as p};
